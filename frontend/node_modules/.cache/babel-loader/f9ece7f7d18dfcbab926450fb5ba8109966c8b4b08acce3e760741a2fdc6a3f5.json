{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\source\\\\repos\\\\eventos_sfco\\\\frontend\\\\src\\\\components\\\\Scanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BrowserMultiFormatReader, BarcodeFormat } from '@zxing/library';\nimport axios from 'axios';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scanner() {\n  _s();\n  const [data, setData] = useState(null);\n  const [scanning, setScanning] = useState(true);\n  const [decodedInfo, setDecodedInfo] = useState({});\n  const [documentMatch, setDocumentMatch] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userInfo, setUserInfo] = useState({\n    nombre: '',\n    rol: '',\n    color: ''\n  }); // Añadir color al estado\n  const [scanned, setScanned] = useState(false);\n  const {\n    eventId\n  } = useParams();\n  const formsToSupport = [BarcodeFormat.PDF_417];\n  const parseData = dataString => {\n    const dataArray = dataString.split('@');\n    return {\n      dni: dataArray[0],\n      apellido: dataArray[1],\n      nombre: dataArray[2],\n      numDocumento: dataArray[4]\n    };\n  };\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    const videoElement = document.getElementById('video');\n    const startScanning = async () => {\n      try {\n        await codeReader.decodeFromVideoDevice(null, videoElement, async (result, error) => {\n          if (result) {\n            const parsedData = parseData(result.getText());\n            setData(result.getText());\n            setDecodedInfo(parsedData);\n            setScanning(false);\n            setScanned(true);\n            try {\n              const response = await axios.post('http://localhost:5000/api/validate-dni', {\n                dni: parsedData.numDocumento\n              });\n              if (response.data.match) {\n                setDocumentMatch(true);\n                setUserInfo({\n                  nombre: response.data.user.usuario,\n                  rol: response.data.user.rol,\n                  color: response.data.user.color // Captura el color\n                });\n              } else {\n                setDocumentMatch(false);\n                setUserInfo({\n                  nombre: '',\n                  rol: '',\n                  color: ''\n                });\n              }\n            } catch (error) {\n              console.error('Error al conectar con el backend:', error);\n              setErrorMessage('Error al conectar con el servidor.');\n            }\n          }\n          if (error) console.error(error);\n        });\n      } catch (error) {\n        console.error('Error al iniciar el escaneo:', error);\n        setErrorMessage('No se pudo acceder a la cámara.');\n      }\n    };\n    if (scanning) startScanning();\n    return () => codeReader.reset();\n  }, [scanning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: userInfo.color || '#ffffff',\n      color: userInfo.color ? '#ffffff' : '#000000',\n      // Texto blanco si hay color de fondo\n      minHeight: '100vh',\n      transition: 'background-color 0.5s ease, color 0.5s ease'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lector de C\\xF3digos Autom\\xE1tico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"video\",\n        className: \"video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 30\n    }, this), scanned ? documentMatch ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-circle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"check-icon\",\n          children: \"\\u2714\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Documento v\\xE1lido y encontrado en la base de datos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this), \" \", userInfo.nombre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Rol:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this), \" \", userInfo.rol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cross-circle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cross-icon\",\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Documento no encontrado en la base de datos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Escanee un DNI...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this), !scanning && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setScanning(true);\n        setScanned(false);\n        setUserInfo({\n          nombre: '',\n          rol: '',\n          color: ''\n        });\n        setErrorMessage('');\n      },\n      className: \"restart-button\",\n      children: \"Reiniciar Escaneo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(Scanner, \"rkoNC8G5stOXo+EDysvAAfDvJR0=\", false, function () {\n  return [useParams];\n});\n_c = Scanner;\nexport default Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useState","useEffect","useParams","BrowserMultiFormatReader","BarcodeFormat","axios","jsxDEV","_jsxDEV","Scanner","_s","data","setData","scanning","setScanning","decodedInfo","setDecodedInfo","documentMatch","setDocumentMatch","errorMessage","setErrorMessage","userInfo","setUserInfo","nombre","rol","color","scanned","setScanned","eventId","formsToSupport","PDF_417","parseData","dataString","dataArray","split","dni","apellido","numDocumento","codeReader","videoElement","document","getElementById","startScanning","decodeFromVideoDevice","result","error","parsedData","getText","response","post","match","user","usuario","console","reset","className","style","backgroundColor","minHeight","transition","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/source/repos/eventos_sfco/frontend/src/components/Scanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { BrowserMultiFormatReader, BarcodeFormat } from '@zxing/library';\r\nimport axios from 'axios';\r\nimport './styles/App.css';\r\n\r\nfunction Scanner() {\r\n    const [data, setData] = useState(null);\r\n    const [scanning, setScanning] = useState(true);\r\n    const [decodedInfo, setDecodedInfo] = useState({});\r\n    const [documentMatch, setDocumentMatch] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [userInfo, setUserInfo] = useState({ nombre: '', rol: '', color: '' }); // Añadir color al estado\r\n    const [scanned, setScanned] = useState(false);\r\n    const { eventId } = useParams();\r\n\r\n    const formsToSupport = [BarcodeFormat.PDF_417];\r\n\r\n    const parseData = (dataString) => {\r\n        const dataArray = dataString.split('@');\r\n        return {\r\n            dni: dataArray[0],\r\n            apellido: dataArray[1],\r\n            nombre: dataArray[2],\r\n            numDocumento: dataArray[4],\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        const codeReader = new BrowserMultiFormatReader();\r\n        const videoElement = document.getElementById('video');\r\n\r\n        const startScanning = async () => {\r\n            try {\r\n                await codeReader.decodeFromVideoDevice(\r\n                    null,\r\n                    videoElement,\r\n                    async (result, error) => {\r\n                        if (result) {\r\n                            const parsedData = parseData(result.getText());\r\n                            setData(result.getText());\r\n                            setDecodedInfo(parsedData);\r\n                            setScanning(false);\r\n                            setScanned(true);\r\n\r\n                            try {\r\n                                const response = await axios.post('http://localhost:5000/api/validate-dni', {\r\n                                    dni: parsedData.numDocumento,\r\n                                });\r\n\r\n                                if (response.data.match) {\r\n                                    setDocumentMatch(true);\r\n                                    setUserInfo({\r\n                                        nombre: response.data.user.usuario,\r\n                                        rol: response.data.user.rol,\r\n                                        color: response.data.user.color, // Captura el color\r\n                                    });\r\n                                } else {\r\n                                    setDocumentMatch(false);\r\n                                    setUserInfo({ nombre: '', rol: '', color: '' });\r\n                                }\r\n                            } catch (error) {\r\n                                console.error('Error al conectar con el backend:', error);\r\n                                setErrorMessage('Error al conectar con el servidor.');\r\n                            }\r\n                        }\r\n\r\n                        if (error) console.error(error);\r\n                    }\r\n                );\r\n            } catch (error) {\r\n                console.error('Error al iniciar el escaneo:', error);\r\n                setErrorMessage('No se pudo acceder a la cámara.');\r\n            }\r\n        };\r\n\r\n        if (scanning) startScanning();\r\n\r\n        return () => codeReader.reset();\r\n    }, [scanning]);\r\n\r\n    return (\r\n        <div\r\n            className=\"App\"\r\n            style={{\r\n                backgroundColor: userInfo.color || '#ffffff',\r\n                color: userInfo.color ? '#ffffff' : '#000000', // Texto blanco si hay color de fondo\r\n                minHeight: '100vh',\r\n                transition: 'background-color 0.5s ease, color 0.5s ease',\r\n            }}\r\n        >\r\n            <h1>Lector de Códigos Automático</h1>\r\n\r\n            <div className=\"video-container\">\r\n                <video id=\"video\" className=\"video\" />\r\n            </div>\r\n\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n            {scanned ? (\r\n                documentMatch ? (\r\n                    <div>\r\n                        <div className=\"check-circle\">\r\n                            <span className=\"check-icon\">✔</span>\r\n                        </div>\r\n                        <p>Documento válido y encontrado en la base de datos.</p>\r\n                        <p>\r\n                            <strong>Nombre:</strong> {userInfo.nombre}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Rol:</strong> {userInfo.rol}\r\n                        </p>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <div className=\"cross-circle\">\r\n                            <span className=\"cross-icon\">✖</span>\r\n                        </div>\r\n                        <p>Documento no encontrado en la base de datos.</p>\r\n                    </div>\r\n                )\r\n            ) : (\r\n                <p>Escanee un DNI...</p>\r\n            )}\r\n\r\n            {!scanning && (\r\n                <button\r\n                    onClick={() => {\r\n                        setScanning(true);\r\n                        setScanned(false);\r\n                        setUserInfo({ nombre: '', rol: '', color: '' });\r\n                        setErrorMessage('');\r\n                    }}\r\n                    className=\"restart-button\"\r\n                >\r\n                    Reiniciar Escaneo\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}