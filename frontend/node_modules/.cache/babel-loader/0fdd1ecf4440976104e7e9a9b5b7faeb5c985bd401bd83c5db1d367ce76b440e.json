{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\source\\\\repos\\\\eventos_sfco\\\\frontend\\\\src\\\\components\\\\Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logs = ({\n  eventId\n}) => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [error, setError] = useState('');\n\n  // Funci�n para formatear la fecha\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString('es-ES', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  useEffect(() => {\n    if (eventId) {\n      axios.get(`http://localhost:3000/api/events/${eventId}/logs`).then(response => {\n        if (response.data.length === 0) {\n          setError('No se encontraron registros para este evento.');\n        } else {\n          setLogs(response.data);\n        }\n      }).catch(err => {\n        console.error('Error al obtener los registros:', err);\n        setError('Error al obtener los registros');\n      });\n    } else {\n      setError('Evento no v�lido');\n    }\n  }, [eventId]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay registros para este evento.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: logs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(log.fecha)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.estado === 1 ? \"Ingreso\" : \"Egreso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.usuario\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)]\n        }, log.id_logs, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Logs, \"wP0ACc7xNdih7YM87H/cY9Pgjp8=\");\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Logs","eventId","_s","logs","setLogs","error","setError","formatDate","dateString","date","Date","toLocaleString","year","month","day","hour","minute","get","then","response","data","length","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","fecha","estado","usuario","id_logs","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/source/repos/eventos_sfco/frontend/src/components/Logs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Logs = ({ eventId }) => {\r\n    const [logs, setLogs] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    // Funci�n para formatear la fecha\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        return date.toLocaleString('es-ES', { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (eventId) {\r\n            axios.get(`http://localhost:3000/api/events/${eventId}/logs`)\r\n                .then(response => {\r\n                    if (response.data.length === 0) {\r\n                        setError('No se encontraron registros para este evento.');\r\n                    } else {\r\n                        setLogs(response.data);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.error('Error al obtener los registros:', err);\r\n                    setError('Error al obtener los registros');\r\n                });\r\n        } else {\r\n            setError('Evento no v�lido');\r\n        }\r\n    }, [eventId]);\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Registros</h2>\r\n            {logs.length === 0 ? (\r\n                <p>No hay registros para este evento.</p>\r\n            ) : (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Fecha</th>\r\n                            <th>Estado</th>\r\n                            <th>Usuario</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {logs.map(log => (\r\n                            <tr key={log.id_logs}>\r\n                                <td>{formatDate(log.fecha)}</td>\r\n                                <td>{log.estado === 1 ? \"Ingreso\" : \"Egreso\"}</td>\r\n                                <td>{log.usuario}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logs;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMY,UAAU,GAAIC,UAAU,IAAK;IAC/B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,cAAc,CAAC,OAAO,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;EAC/H,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZ,IAAIK,OAAO,EAAE;MACTJ,KAAK,CAACoB,GAAG,CAAC,oCAAoChB,OAAO,OAAO,CAAC,CACxDiB,IAAI,CAACC,QAAQ,IAAI;QACd,IAAIA,QAAQ,CAACC,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;UAC5Bf,QAAQ,CAAC,+CAA+C,CAAC;QAC7D,CAAC,MAAM;UACHF,OAAO,CAACe,QAAQ,CAACC,IAAI,CAAC;QAC1B;MACJ,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAI;QACVC,OAAO,CAACnB,KAAK,CAAC,iCAAiC,EAAEkB,GAAG,CAAC;QACrDjB,QAAQ,CAAC,gCAAgC,CAAC;MAC9C,CAAC,CAAC;IACV,CAAC,MAAM;MACHA,QAAQ,CAAC,kBAAkB,CAAC;IAChC;EACJ,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,IAAII,KAAK,EAAE;IACP,oBAAON,OAAA;MAAA0B,QAAA,EAAMpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7B;EAEA,oBACI9B,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjB1B,IAAI,CAACkB,MAAM,KAAK,CAAC,gBACdtB,OAAA;MAAA0B,QAAA,EAAG;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEzC9B,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAA0B,QAAA,eACI1B,OAAA;UAAA0B,QAAA,gBACI1B,OAAA;YAAA0B,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACd9B,OAAA;YAAA0B,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACf9B,OAAA;YAAA0B,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACR9B,OAAA;QAAA0B,QAAA,EACKtB,IAAI,CAAC2B,GAAG,CAACC,GAAG,iBACThC,OAAA;UAAA0B,QAAA,gBACI1B,OAAA;YAAA0B,QAAA,EAAKlB,UAAU,CAACwB,GAAG,CAACC,KAAK;UAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChC9B,OAAA;YAAA0B,QAAA,EAAKM,GAAG,CAACE,MAAM,KAAK,CAAC,GAAG,SAAS,GAAG;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClD9B,OAAA;YAAA0B,QAAA,EAAKM,GAAG,CAACG;UAAO;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAHjBE,GAAG,CAACI,OAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIhB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC3B,EAAA,CA5DIF,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AA8DV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}