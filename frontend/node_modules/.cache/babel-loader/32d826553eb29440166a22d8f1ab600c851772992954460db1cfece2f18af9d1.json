{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\source\\\\repos\\\\eventos_sfco\\\\frontend\\\\src\\\\components\\\\Scanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BrowserMultiFormatReader } from '@zxing/library';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scanner() {\n  _s();\n  const {\n    eventId\n  } = useParams();\n  const [decodedInfo, setDecodedInfo] = useState(null);\n  const [documentMatch, setDocumentMatch] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userInfo, setUserInfo] = useState({\n    nombre: '',\n    rol: '',\n    color: ''\n  });\n  const [isCameraVisible, setIsCameraVisible] = useState(true);\n  const [isEntry, setIsEntry] = useState(true);\n  const [isProcessing, setIsProcessing] = useState(false); // Para evitar registros múltiples durante el escaneo\n\n  const parseData = useCallback(dataString => {\n    const dataArray = dataString.split('@');\n    return {\n      dni: dataArray[0],\n      apellido: dataArray[1],\n      nombre: dataArray[2],\n      numDocumento: dataArray[4]\n    };\n  }, []);\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    const videoElement = document.getElementById('video');\n    const startScanning = async () => {\n      try {\n        await codeReader.decodeFromVideoDevice(null, videoElement, async (result, error) => {\n          if (isProcessing) return; // Evitar múltiples procesamientos al mismo tiempo\n\n          if (error) {\n            if (error.name !== 'NotFoundException') {\n              console.error('Error al leer el código:', error.message || error);\n            }\n            return;\n          }\n          if (result) {\n            setIsProcessing(true); // Bloquear nuevos escaneos temporalmente\n            const parsedData = parseData(result.getText());\n            setDecodedInfo(parsedData);\n            if (!parsedData.numDocumento) {\n              setErrorMessage('Datos escaneados inválidos.');\n              setIsProcessing(false);\n              return;\n            }\n            try {\n              // Validar el documento\n              const validateResponse = await axios.post(`/api/validate/${eventId}`, {\n                dni: parsedData.numDocumento\n              });\n              if (validateResponse.data.match) {\n                setDocumentMatch(true);\n                const {\n                  user\n                } = validateResponse.data;\n                setUserInfo({\n                  nombre: user.usuario,\n                  rol: user.rol,\n                  color: user.color\n                });\n\n                // Registrar entrada o salida\n                await axios.post(`/api/log/${eventId}`, {\n                  userId: user.id_usuario,\n                  estado: isEntry ? 1 : 0 // 1 para entrada, 0 para salida\n                });\n                console.log('Registro exitoso');\n                setIsCameraVisible(false); // Pausar la cámara tras un registro exitoso\n              } else {\n                setDocumentMatch(false);\n                setUserInfo({\n                  nombre: '',\n                  rol: '',\n                  color: ''\n                });\n                console.log('Documento no válido');\n              }\n            } catch (error) {\n              console.error('Error en el servidor:', error);\n              setErrorMessage('Error al conectar con el servidor.');\n            } finally {\n              setIsProcessing(false); // Permitir nuevos escaneos\n            }\n          }\n        });\n      } catch (error) {\n        setErrorMessage('No se pudo acceder a la cámara. Verifica los permisos.');\n      }\n    };\n    const stopCamera = () => {\n      codeReader.reset();\n    };\n    if (isCameraVisible) {\n      startScanning();\n    }\n    return () => {\n      stopCamera();\n    };\n  }, [eventId, isCameraVisible, isProcessing, parseData, isEntry]);\n  const handleRetry = () => {\n    setDecodedInfo(null);\n    setDocumentMatch(false);\n    setErrorMessage('');\n    setUserInfo({\n      nombre: '',\n      rol: '',\n      color: ''\n    });\n    setIsCameraVisible(true); // Reactivar la cámara para un nuevo escaneo\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: userInfo.color || '#ffffff',\n      color: userInfo.color ? '#ffffff' : '#000000',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Esc\\xE1ner de Evento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"action\",\n          value: \"entrada\",\n          checked: isEntry,\n          onChange: () => setIsEntry(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), \"Entrada\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"action\",\n          value: \"salida\",\n          checked: !isEntry,\n          onChange: () => setIsEntry(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), \"Salida\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), isCameraVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"video\",\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this), decodedInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [documentMatch ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nombre: \", userInfo.nombre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rol: \", userInfo.rol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Acci\\xF3n: \", isEntry ? 'Entrada' : 'Salida']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Documento no encontrado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetry,\n        children: \"Escanear otro documento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n_s(Scanner, \"A08nwz86oG5bcd4pFhkIpRK+y7U=\", false, function () {\n  return [useParams];\n});\n_c = Scanner;\nexport default Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","BrowserMultiFormatReader","axios","jsxDEV","_jsxDEV","Scanner","_s","eventId","decodedInfo","setDecodedInfo","documentMatch","setDocumentMatch","errorMessage","setErrorMessage","userInfo","setUserInfo","nombre","rol","color","isCameraVisible","setIsCameraVisible","isEntry","setIsEntry","isProcessing","setIsProcessing","parseData","dataString","dataArray","split","dni","apellido","numDocumento","codeReader","videoElement","document","getElementById","startScanning","decodeFromVideoDevice","result","error","name","console","message","parsedData","getText","validateResponse","post","data","match","user","usuario","userId","id_usuario","estado","log","stopCamera","reset","handleRetry","style","backgroundColor","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","checked","onChange","id","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/source/repos/eventos_sfco/frontend/src/components/Scanner.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { BrowserMultiFormatReader } from '@zxing/library';\r\nimport axios from 'axios';\r\n\r\nfunction Scanner() {\r\n    const { eventId } = useParams();\r\n    const [decodedInfo, setDecodedInfo] = useState(null);\r\n    const [documentMatch, setDocumentMatch] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [userInfo, setUserInfo] = useState({ nombre: '', rol: '', color: '' });\r\n    const [isCameraVisible, setIsCameraVisible] = useState(true);\r\n    const [isEntry, setIsEntry] = useState(true);\r\n    const [isProcessing, setIsProcessing] = useState(false); // Para evitar registros múltiples durante el escaneo\r\n\r\n    const parseData = useCallback((dataString) => {\r\n        const dataArray = dataString.split('@');\r\n        return {\r\n            dni: dataArray[0],\r\n            apellido: dataArray[1],\r\n            nombre: dataArray[2],\r\n            numDocumento: dataArray[4],\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const codeReader = new BrowserMultiFormatReader();\r\n        const videoElement = document.getElementById('video');\r\n\r\n        const startScanning = async () => {\r\n            try {\r\n                await codeReader.decodeFromVideoDevice(null, videoElement, async (result, error) => {\r\n                    if (isProcessing) return; // Evitar múltiples procesamientos al mismo tiempo\r\n\r\n                    if (error) {\r\n                        if (error.name !== 'NotFoundException') {\r\n                            console.error('Error al leer el código:', error.message || error);\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    if (result) {\r\n                        setIsProcessing(true); // Bloquear nuevos escaneos temporalmente\r\n                        const parsedData = parseData(result.getText());\r\n                        setDecodedInfo(parsedData);\r\n\r\n                        if (!parsedData.numDocumento) {\r\n                            setErrorMessage('Datos escaneados inválidos.');\r\n                            setIsProcessing(false);\r\n                            return;\r\n                        }\r\n\r\n                        try {\r\n                            // Validar el documento\r\n                            const validateResponse = await axios.post(`/api/validate/${eventId}`, {\r\n                                dni: parsedData.numDocumento,\r\n                            });\r\n\r\n                            if (validateResponse.data.match) {\r\n                                setDocumentMatch(true);\r\n                                const { user } = validateResponse.data;\r\n                                setUserInfo({\r\n                                    nombre: user.usuario,\r\n                                    rol: user.rol,\r\n                                    color: user.color,\r\n                                });\r\n\r\n                                // Registrar entrada o salida\r\n                                await axios.post(`/api/log/${eventId}`, {\r\n                                    userId: user.id_usuario,\r\n                                    estado: isEntry ? 1 : 0, // 1 para entrada, 0 para salida\r\n                                });\r\n\r\n                                console.log('Registro exitoso');\r\n                                setIsCameraVisible(false); // Pausar la cámara tras un registro exitoso\r\n                            } else {\r\n                                setDocumentMatch(false);\r\n                                setUserInfo({ nombre: '', rol: '', color: '' });\r\n                                console.log('Documento no válido');\r\n                            }\r\n                        } catch (error) {\r\n                            console.error('Error en el servidor:', error);\r\n                            setErrorMessage('Error al conectar con el servidor.');\r\n                        } finally {\r\n                            setIsProcessing(false); // Permitir nuevos escaneos\r\n                        }\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                setErrorMessage('No se pudo acceder a la cámara. Verifica los permisos.');\r\n            }\r\n        };\r\n\r\n        const stopCamera = () => {\r\n            codeReader.reset();\r\n        };\r\n\r\n        if (isCameraVisible) {\r\n            startScanning();\r\n        }\r\n\r\n        return () => {\r\n            stopCamera();\r\n        };\r\n    }, [eventId, isCameraVisible, isProcessing, parseData, isEntry]);\r\n\r\n    const handleRetry = () => {\r\n        setDecodedInfo(null);\r\n        setDocumentMatch(false);\r\n        setErrorMessage('');\r\n        setUserInfo({ nombre: '', rol: '', color: '' });\r\n        setIsCameraVisible(true); // Reactivar la cámara para un nuevo escaneo\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundColor: userInfo.color || '#ffffff',\r\n                color: userInfo.color ? '#ffffff' : '#000000',\r\n                minHeight: '100vh',\r\n            }}\r\n        >\r\n            <h1>Escáner de Evento</h1>\r\n\r\n            {/* Selector de Entrada o Salida */}\r\n            <div>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"action\"\r\n                        value=\"entrada\"\r\n                        checked={isEntry}\r\n                        onChange={() => setIsEntry(true)}\r\n                    />\r\n                    Entrada\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"action\"\r\n                        value=\"salida\"\r\n                        checked={!isEntry}\r\n                        onChange={() => setIsEntry(false)}\r\n                    />\r\n                    Salida\r\n                </label>\r\n            </div>\r\n\r\n            {isCameraVisible && (\r\n                <div>\r\n                    <video id=\"video\" style={{ width: '100%' }} />\r\n                </div>\r\n            )}\r\n\r\n            {decodedInfo && (\r\n                <div>\r\n                    {documentMatch ? (\r\n                        <div>\r\n                            <p>Nombre: {userInfo.nombre}</p>\r\n                            <p>Rol: {userInfo.rol}</p>\r\n                            <p>Acción: {isEntry ? 'Entrada' : 'Salida'}</p>\r\n                        </div>\r\n                    ) : (\r\n                        <p>Documento no encontrado.</p>\r\n                    )}\r\n                    <button onClick={handleRetry}>Escanear otro documento</button>\r\n                </div>\r\n            )}\r\n\r\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}