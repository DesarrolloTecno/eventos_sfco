{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\source\\\\repos\\\\eventos_sfco\\\\frontend\\\\src\\\\components\\\\Scanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BrowserMultiFormatReader } from '@zxing/library';\nimport axios from 'axios';\nimport '../styles/App.css'; // Mantenemos los estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scanner() {\n  _s();\n  const {\n    eventId\n  } = useParams();\n  const [decodedInfo, setDecodedInfo] = useState(null);\n  const [documentMatch, setDocumentMatch] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userInfo, setUserInfo] = useState({\n    nombre: '',\n    rol: '',\n    color: ''\n  });\n  const [eventName, setEventName] = useState('');\n  const [isCameraVisible, setIsCameraVisible] = useState(true); // Controla la visibilidad de la cámara\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isEntry, setIsEntry] = useState(true); // Estado para determinar entrada o salida\n\n  useEffect(() => {\n    const fetchEventName = async () => {\n      try {\n        const response = await axios.get(`/api/events/${eventId}`);\n        setEventName(response.data.nombre);\n      } catch (error) {\n        console.error('Error al obtener el nombre del evento:', error);\n        setErrorMessage('No se pudo cargar el nombre del evento.');\n      }\n    };\n    fetchEventName();\n  }, [eventId]);\n  const parseData = useCallback(dataString => {\n    const dataArray = dataString.split('@');\n    return {\n      dni: dataArray[0],\n      apellido: dataArray[1],\n      nombre: dataArray[2],\n      numDocumento: dataArray[4]\n    };\n  }, []);\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    const videoElement = document.getElementById('video');\n    const startScanning = async () => {\n      try {\n        // Verifica si ya se está procesando\n        if (isProcessing) return;\n        await codeReader.decodeFromVideoDevice(null, videoElement, async (result, error) => {\n          if (isProcessing) return; // Evita procesar múltiples veces\n\n          if (error) {\n            if (error.name !== 'NotFoundException') {\n              console.error('Error al leer el código:', error.message || error);\n            }\n            return;\n          }\n          if (result) {\n            setIsProcessing(true); // Inicia el procesamiento\n\n            const parsedData = parseData(result.getText());\n            setDecodedInfo(parsedData);\n            if (!parsedData.numDocumento) {\n              setErrorMessage('Datos escaneados inválidos.');\n              setIsProcessing(false);\n              return;\n            }\n            try {\n              const validateResponse = await axios.post(`/api/validate/${eventId}`, {\n                dni: parsedData.numDocumento\n              });\n              if (validateResponse.data.match) {\n                setDocumentMatch(true);\n                const {\n                  user\n                } = validateResponse.data;\n                setUserInfo({\n                  nombre: user.usuario,\n                  rol: user.rol,\n                  color: user.color\n                });\n\n                // Verificación para evitar múltiples envíos\n                if (isProcessing) return;\n                console.log('Estado de entrada/salida:', isEntry);\n\n                // Se asegura que solo se registre una vez\n                const logResponse = await axios.post(`/api/log/${eventId}`, {\n                  userId: user.id_usuario,\n                  estado: isEntry ? 1 : 0\n                });\n\n                // Verifica si la respuesta del log fue exitosa\n                if (logResponse.data.message.includes('registro exitoso')) {\n                  console.log('Registro realizado correctamente.');\n                }\n              } else {\n                setDocumentMatch(false);\n                setUserInfo({\n                  nombre: '',\n                  rol: '',\n                  color: ''\n                });\n              }\n            } catch (error) {\n              setErrorMessage('Error al conectar con el servidor.');\n            } finally {\n              setIsProcessing(false); // Finaliza el procesamiento\n            }\n\n            // Eliminar la cámara inmediatamente después de escanear\n            setIsCameraVisible(false);\n            codeReader.reset(); // Detenemos explícitamente el lector\n          }\n        });\n      } catch (error) {\n        setErrorMessage('No se pudo acceder a la cámara. Verifica los permisos.');\n      }\n    };\n    const stopCamera = () => {\n      codeReader.reset(); // Aseguramos que el lector se detenga al desmontar el componente\n    };\n    if (isCameraVisible) {\n      startScanning();\n    }\n    return () => {\n      stopCamera();\n    };\n  }, [eventId, isCameraVisible, isProcessing, parseData, isEntry]);\n  const handleRetry = () => {\n    setDecodedInfo(null);\n    setDocumentMatch(false);\n    setErrorMessage('');\n    setUserInfo({\n      nombre: '',\n      rol: '',\n      color: ''\n    });\n    setIsCameraVisible(true); // Reactivar la cámara para un nuevo escaneo\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: userInfo.color || '#ffffff',\n      color: userInfo.color ? '#ffffff' : '#000000',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: eventName ? `Evento: ${eventName}` : 'Cargando evento...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"action\",\n          value: \"entrada\",\n          checked: isEntry,\n          onChange: () => setIsEntry(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), \"Entrada\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"action\",\n          value: \"salida\",\n          checked: !isEntry,\n          onChange: () => setIsEntry(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), \"Salida\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), isCameraVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"video\",\n        className: \"video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this), decodedInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [documentMatch ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nombre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 32\n          }, this), \" \", userInfo.nombre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rol:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 32\n          }, this), \" \", userInfo.rol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Acci\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 32\n          }, this), \" \", isEntry ? 'Entrada' : 'Salida']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-match-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Documento no encontrado.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"restart-button\",\n        onClick: handleRetry,\n        children: \"Escanear otro documento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n}\n_s(Scanner, \"kKAp1BuigW2iWjbjO726GUFjQ0A=\", false, function () {\n  return [useParams];\n});\n_c = Scanner;\nexport default Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","BrowserMultiFormatReader","axios","jsxDEV","_jsxDEV","Scanner","_s","eventId","decodedInfo","setDecodedInfo","documentMatch","setDocumentMatch","errorMessage","setErrorMessage","userInfo","setUserInfo","nombre","rol","color","eventName","setEventName","isCameraVisible","setIsCameraVisible","isProcessing","setIsProcessing","isEntry","setIsEntry","fetchEventName","response","get","data","error","console","parseData","dataString","dataArray","split","dni","apellido","numDocumento","codeReader","videoElement","document","getElementById","startScanning","decodeFromVideoDevice","result","name","message","parsedData","getText","validateResponse","post","match","user","usuario","log","logResponse","userId","id_usuario","estado","includes","reset","stopCamera","handleRetry","style","backgroundColor","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","checked","onChange","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/source/repos/eventos_sfco/frontend/src/components/Scanner.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { BrowserMultiFormatReader } from '@zxing/library';\r\nimport axios from 'axios';\r\nimport '../styles/App.css'; // Mantenemos los estilos\r\n\r\nfunction Scanner() {\r\n    const { eventId } = useParams();\r\n    const [decodedInfo, setDecodedInfo] = useState(null);\r\n    const [documentMatch, setDocumentMatch] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [userInfo, setUserInfo] = useState({ nombre: '', rol: '', color: '' });\r\n    const [eventName, setEventName] = useState('');\r\n    const [isCameraVisible, setIsCameraVisible] = useState(true); // Controla la visibilidad de la cámara\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [isEntry, setIsEntry] = useState(true); // Estado para determinar entrada o salida\r\n\r\n    useEffect(() => {\r\n        const fetchEventName = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/events/${eventId}`);\r\n                setEventName(response.data.nombre);\r\n            } catch (error) {\r\n                console.error('Error al obtener el nombre del evento:', error);\r\n                setErrorMessage('No se pudo cargar el nombre del evento.');\r\n            }\r\n        };\r\n\r\n        fetchEventName();\r\n    }, [eventId]);\r\n\r\n    const parseData = useCallback((dataString) => {\r\n        const dataArray = dataString.split('@');\r\n        return {\r\n            dni: dataArray[0],\r\n            apellido: dataArray[1],\r\n            nombre: dataArray[2],\r\n            numDocumento: dataArray[4],\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const codeReader = new BrowserMultiFormatReader();\r\n        const videoElement = document.getElementById('video');\r\n\r\n        const startScanning = async () => {\r\n            try {\r\n                // Verifica si ya se está procesando\r\n                if (isProcessing) return;\r\n\r\n                await codeReader.decodeFromVideoDevice(null, videoElement, async (result, error) => {\r\n                    if (isProcessing) return; // Evita procesar múltiples veces\r\n\r\n                    if (error) {\r\n                        if (error.name !== 'NotFoundException') {\r\n                            console.error('Error al leer el código:', error.message || error);\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    if (result) {\r\n                        setIsProcessing(true); // Inicia el procesamiento\r\n\r\n                        const parsedData = parseData(result.getText());\r\n                        setDecodedInfo(parsedData);\r\n\r\n                        if (!parsedData.numDocumento) {\r\n                            setErrorMessage('Datos escaneados inválidos.');\r\n                            setIsProcessing(false);\r\n                            return;\r\n                        }\r\n\r\n                        try {\r\n                            const validateResponse = await axios.post(`/api/validate/${eventId}`, {\r\n                                dni: parsedData.numDocumento,\r\n                            });\r\n\r\n                            if (validateResponse.data.match) {\r\n                                setDocumentMatch(true);\r\n                                const { user } = validateResponse.data;\r\n                                setUserInfo({\r\n                                    nombre: user.usuario,\r\n                                    rol: user.rol,\r\n                                    color: user.color,\r\n                                });\r\n\r\n                                // Verificación para evitar múltiples envíos\r\n                                if (isProcessing) return;\r\n\r\n                                console.log('Estado de entrada/salida:', isEntry);\r\n\r\n                                // Se asegura que solo se registre una vez\r\n                                const logResponse = await axios.post(`/api/log/${eventId}`, {\r\n                                    userId: user.id_usuario,\r\n                                    estado: isEntry ? 1 : 0,\r\n                                });\r\n\r\n                                // Verifica si la respuesta del log fue exitosa\r\n                                if (logResponse.data.message.includes('registro exitoso')) {\r\n                                    console.log('Registro realizado correctamente.');\r\n                                }\r\n\r\n                            } else {\r\n                                setDocumentMatch(false);\r\n                                setUserInfo({ nombre: '', rol: '', color: '' });\r\n                            }\r\n                        } catch (error) {\r\n                            setErrorMessage('Error al conectar con el servidor.');\r\n                        } finally {\r\n                            setIsProcessing(false); // Finaliza el procesamiento\r\n                        }\r\n\r\n                        // Eliminar la cámara inmediatamente después de escanear\r\n                        setIsCameraVisible(false);\r\n                        codeReader.reset(); // Detenemos explícitamente el lector\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                setErrorMessage('No se pudo acceder a la cámara. Verifica los permisos.');\r\n            }\r\n        };\r\n\r\n        const stopCamera = () => {\r\n            codeReader.reset(); // Aseguramos que el lector se detenga al desmontar el componente\r\n        };\r\n\r\n        if (isCameraVisible) {\r\n            startScanning();\r\n        }\r\n\r\n        return () => {\r\n            stopCamera();\r\n        };\r\n    }, [eventId, isCameraVisible, isProcessing, parseData, isEntry]);\r\n\r\n    const handleRetry = () => {\r\n        setDecodedInfo(null);\r\n        setDocumentMatch(false);\r\n        setErrorMessage('');\r\n        setUserInfo({ nombre: '', rol: '', color: '' });\r\n        setIsCameraVisible(true); // Reactivar la cámara para un nuevo escaneo\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundColor: userInfo.color || '#ffffff',\r\n                color: userInfo.color ? '#ffffff' : '#000000',\r\n                minHeight: '100vh',\r\n            }}\r\n        >\r\n            <h1>{eventName ? `Evento: ${eventName}` : 'Cargando evento...'}</h1>\r\n\r\n            <div className=\"action-selector\">\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"action\"\r\n                        value=\"entrada\"\r\n                        checked={isEntry}\r\n                        onChange={() => setIsEntry(true)}\r\n                    />\r\n                    Entrada\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"action\"\r\n                        value=\"salida\"\r\n                        checked={!isEntry}\r\n                        onChange={() => setIsEntry(false)}\r\n                    />\r\n                    Salida\r\n                </label>\r\n            </div>\r\n\r\n            {/* Condicional para ocultar el div de la cámara si no se está escaneando */}\r\n            {isCameraVisible && (\r\n                <div className=\"video-container\">\r\n                    <video id=\"video\" className=\"video\" />\r\n                </div>\r\n            )}\r\n\r\n            {decodedInfo && (\r\n                <div>\r\n                    {documentMatch ? (\r\n                        <div className=\"document-info\">\r\n                            <p><strong>Nombre:</strong> {userInfo.nombre}</p>\r\n                            <p><strong>Rol:</strong> {userInfo.rol}</p>\r\n                            <p><strong>Acción:</strong> {isEntry ? 'Entrada' : 'Salida'}</p>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"no-match-message\">\r\n                            <p>Documento no encontrado.</p>\r\n                        </div>\r\n                    )}\r\n\r\n                    <button className=\"restart-button\" onClick={handleRetry}>Escanear otro documento</button>\r\n                </div>\r\n            )}\r\n\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}