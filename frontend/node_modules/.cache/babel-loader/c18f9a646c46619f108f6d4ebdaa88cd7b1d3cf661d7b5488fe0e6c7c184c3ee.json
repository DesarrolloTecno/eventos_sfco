{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\source\\\\repos\\\\eventos_sfco\\\\frontend\\\\src\\\\components\\\\Scanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BrowserMultiFormatReader } from '@zxing/library';\nimport axios from 'axios';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scanner() {\n  _s();\n  const {\n    eventId\n  } = useParams();\n  const [decodedInfo, setDecodedInfo] = useState(null);\n  const [documentMatch, setDocumentMatch] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userInfo, setUserInfo] = useState({\n    nombre: '',\n    rol: '',\n    color: ''\n  });\n  const [eventName, setEventName] = useState('');\n  const [isCameraVisible, setIsCameraVisible] = useState(true);\n  useEffect(() => {\n    // Carga el nombre del evento al inicio\n    axios.get(`/api/events/${eventId}`).then(response => setEventName(response.data.nombre)).catch(() => setErrorMessage('No se pudo cargar el nombre del evento.'));\n  }, [eventId]);\n  const parseData = useCallback(dataString => {\n    // Función para interpretar datos del código escaneado\n    const dataArray = dataString.split('@');\n    return {\n      dni: dataArray[0],\n      apellido: dataArray[1],\n      nombre: dataArray[2],\n      numDocumento: dataArray[4]\n    };\n  }, []);\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    const videoElement = document.getElementById('video');\n    if (!videoElement) {\n      setErrorMessage('No se pudo acceder al elemento de video.');\n      return;\n    }\n    codeReader.decodeFromVideoDevice(null, videoElement, async (result, error) => {\n      if (error) {\n        if (error.name !== 'NotFoundException') {\n          setErrorMessage('Error al leer el código.');\n        }\n        return;\n      }\n      if (result) {\n        const parsedData = parseData(result.getText());\n        setDecodedInfo(parsedData);\n        if (!parsedData.numDocumento) {\n          setErrorMessage('Datos escaneados inválidos.');\n          return;\n        }\n        try {\n          // Validar documento en el servidor\n          const validateResponse = await axios.post(`/api/validate/${eventId}`, {\n            dni: parsedData.numDocumento\n          });\n          if (validateResponse.data.match) {\n            setDocumentMatch(true);\n            setUserInfo({\n              nombre: validateResponse.data.user.usuario,\n              rol: validateResponse.data.user.rol,\n              color: validateResponse.data.user.color\n            });\n\n            // Registrar entrada/salida\n            await axios.post(`/api/log/${eventId}`, {\n              userId: validateResponse.data.user.id_usuario\n            });\n            setIsCameraVisible(false);\n            codeReader.reset();\n          } else {\n            setDocumentMatch(false);\n            setErrorMessage('Documento no encontrado.');\n          }\n        } catch {\n          setErrorMessage('Error al conectar con el servidor.');\n        }\n      }\n    });\n    return () => {\n      codeReader.reset();\n    };\n  }, [eventId, parseData]);\n  const handleRetry = () => {\n    setDecodedInfo(null);\n    setDocumentMatch(false);\n    setErrorMessage('');\n    setUserInfo({\n      nombre: '',\n      rol: '',\n      color: ''\n    });\n    setIsCameraVisible(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: userInfo.color || '#ffffff',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: eventName ? `Evento: ${eventName}` : 'Cargando evento...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), isCameraVisible && /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"video\",\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }, this), decodedInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [documentMatch ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 28\n        }, this), \" \", userInfo.nombre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Documento no encontrado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetry,\n        children: \"Escanear otro documento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(Scanner, \"BoBBfjX9czpsTI8PaCEMYnVb8bo=\", false, function () {\n  return [useParams];\n});\n_c = Scanner;\nexport default Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","BrowserMultiFormatReader","axios","jsxDEV","_jsxDEV","Scanner","_s","eventId","decodedInfo","setDecodedInfo","documentMatch","setDocumentMatch","errorMessage","setErrorMessage","userInfo","setUserInfo","nombre","rol","color","eventName","setEventName","isCameraVisible","setIsCameraVisible","get","then","response","data","catch","parseData","dataString","dataArray","split","dni","apellido","numDocumento","codeReader","videoElement","document","getElementById","decodeFromVideoDevice","result","error","name","parsedData","getText","validateResponse","post","match","user","usuario","userId","id_usuario","reset","handleRetry","style","backgroundColor","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","id","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/source/repos/eventos_sfco/frontend/src/components/Scanner.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { BrowserMultiFormatReader } from '@zxing/library';\r\nimport axios from 'axios';\r\nimport '../styles/App.css';\r\n\r\nfunction Scanner() {\r\n    const { eventId } = useParams();\r\n    const [decodedInfo, setDecodedInfo] = useState(null);\r\n    const [documentMatch, setDocumentMatch] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [userInfo, setUserInfo] = useState({ nombre: '', rol: '', color: '' });\r\n    const [eventName, setEventName] = useState('');\r\n    const [isCameraVisible, setIsCameraVisible] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Carga el nombre del evento al inicio\r\n        axios.get(`/api/events/${eventId}`)\r\n            .then((response) => setEventName(response.data.nombre))\r\n            .catch(() => setErrorMessage('No se pudo cargar el nombre del evento.'));\r\n    }, [eventId]);\r\n\r\n    const parseData = useCallback((dataString) => {\r\n        // Función para interpretar datos del código escaneado\r\n        const dataArray = dataString.split('@');\r\n        return {\r\n            dni: dataArray[0],\r\n            apellido: dataArray[1],\r\n            nombre: dataArray[2],\r\n            numDocumento: dataArray[4],\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const codeReader = new BrowserMultiFormatReader();\r\n        const videoElement = document.getElementById('video');\r\n\r\n        if (!videoElement) {\r\n            setErrorMessage('No se pudo acceder al elemento de video.');\r\n            return;\r\n        }\r\n\r\n        codeReader.decodeFromVideoDevice(null, videoElement, async (result, error) => {\r\n            if (error) {\r\n                if (error.name !== 'NotFoundException') {\r\n                    setErrorMessage('Error al leer el código.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (result) {\r\n                const parsedData = parseData(result.getText());\r\n                setDecodedInfo(parsedData);\r\n\r\n                if (!parsedData.numDocumento) {\r\n                    setErrorMessage('Datos escaneados inválidos.');\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    // Validar documento en el servidor\r\n                    const validateResponse = await axios.post(`/api/validate/${eventId}`, {\r\n                        dni: parsedData.numDocumento,\r\n                    });\r\n\r\n                    if (validateResponse.data.match) {\r\n                        setDocumentMatch(true);\r\n                        setUserInfo({\r\n                            nombre: validateResponse.data.user.usuario,\r\n                            rol: validateResponse.data.user.rol,\r\n                            color: validateResponse.data.user.color,\r\n                        });\r\n\r\n                        // Registrar entrada/salida\r\n                        await axios.post(`/api/log/${eventId}`, {\r\n                            userId: validateResponse.data.user.id_usuario,\r\n                        });\r\n\r\n                        setIsCameraVisible(false);\r\n                        codeReader.reset();\r\n                    } else {\r\n                        setDocumentMatch(false);\r\n                        setErrorMessage('Documento no encontrado.');\r\n                    }\r\n                } catch {\r\n                    setErrorMessage('Error al conectar con el servidor.');\r\n                }\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            codeReader.reset();\r\n        };\r\n    }, [eventId, parseData]);\r\n\r\n    const handleRetry = () => {\r\n        setDecodedInfo(null);\r\n        setDocumentMatch(false);\r\n        setErrorMessage('');\r\n        setUserInfo({ nombre: '', rol: '', color: '' });\r\n        setIsCameraVisible(true);\r\n    };\r\n\r\n    return (\r\n        <div style={{ backgroundColor: userInfo.color || '#ffffff', minHeight: '100vh' }}>\r\n            <h1>{eventName ? `Evento: ${eventName}` : 'Cargando evento...'}</h1>\r\n\r\n            {isCameraVisible && <video id=\"video\" style={{ width: '100%' }} />}\r\n\r\n            {decodedInfo && (\r\n                <div>\r\n                    {documentMatch ? (\r\n                        <p><strong>Nombre:</strong> {userInfo.nombre}</p>\r\n                    ) : (\r\n                        <p>Documento no encontrado.</p>\r\n                    )}\r\n                    <button onClick={handleRetry}>Escanear otro documento</button>\r\n                </div>\r\n            )}\r\n\r\n            {errorMessage && <p>{errorMessage}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}